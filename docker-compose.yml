version: '3.8'

services:
  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    ports:
      - "${NGINX_PORT:-9090}:9090"  # Dev port
      - "${NGINX_SSL_PORT:-443}:443"  # Prod SSL port
      - "${NGINX_HTTP_PORT:-80}:80"   # Prod HTTP port
    volumes:
      - .:/var/www/html
      - ./nginx/conf.d/${NGINX_CONF:-default.dev.conf}:/etc/nginx/conf.d/default.conf
      - ./logs/nginx:/var/log/nginx
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
      - ./certbot/www:/var/www/certbot
    depends_on:
      - php
    environment:
      - DOMAIN=${DOMAIN:-localhost}

  php:
    build: .
    expose:
      - "9000"
    volumes:
      - .:/var/www/html
      - ./logs:/var/log/php-fpm
    depends_on:
      - db
    environment:
      DB_HOST: db
      DB_USER: ${DB_USER:-user}
      DB_PASSWORD: ${DB_PASSWORD:-password}
      DB_NAME: ${DB_NAME:-gallery_db}

  db:
    image: mysql:8.0
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-rootpassword}
      MYSQL_DATABASE: ${DB_NAME:-gallery_db}
      MYSQL_USER: ${DB_USER:-user}
      MYSQL_PASSWORD: ${DB_PASSWORD:-password}

  certbot:
    image: certbot/certbot:latest
    container_name: certbot
    volumes:
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
      - ./certbot/www:/var/www/certbot
    depends_on:
      - nginx
    command: certonly --webroot --webroot-path=/var/www/certbot --email ${SSL_EMAIL} --agree-tos --no-eff-email -d ${DOMAIN}
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

volumes:
  mysql_data:
  certbot-etc:
  certbot-var: 