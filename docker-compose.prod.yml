version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - .:/var/www/html
      - ./uploads:/var/www/html/uploads
    depends_on:
      - db
    environment:
      - DB_HOST=db
      - DB_USER=renkli_perde
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=renkli_perde_db
    restart: always

  db:
    image: mysql:8.0
    expose:
      - "3306"
    environment:
      - MYSQL_DATABASE=renkli_perde_db
      - MYSQL_USER=renkli_perde
      - MYSQL_PASSWORD=${DB_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${DB_ROOT_PASSWORD}
    volumes:
      - mysql_data:/var/lib/mysql
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    restart: always

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - .:/var/www/html
      - ./uploads:/var/www/html/uploads
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
      - webroot:/var/www/certbot
    depends_on:
      - app
    restart: always

  certbot:
    image: certbot/certbot
    volumes:
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
      - webroot:/var/www/certbot
    depends_on:
      - nginx
    command: certonly --webroot --webroot-path=/var/www/certbot --email ${CERTBOT_EMAIL} --agree-tos --no-eff-email --force-renewal -d ${DOMAIN_NAME}
    restart: always

volumes:
  mysql_data:
  certbot-etc:
  certbot-var:
  webroot:

networks:
  default:
    name: renkli_perde_network 